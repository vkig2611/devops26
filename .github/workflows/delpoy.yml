name: Zip and Send Notification.txt to Slack

on:
  push:
    branches:
      - main

jobs:
  zip-and-send:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4  

      - name: Install zip (if needed)
        run: sudo apt-get update && sudo apt-get install -y zip

      - name: Zip notification.txt into output.zip
        run: |
          if [ -f "notification.txt" ]; then
            zip -j output.zip notification.txt
          else
            echo "notification.txt not found!" && exit 1
          fi

      - name: Get file size
        id: file_size
        run: echo "size=$(stat -c%s output.zip)" >> $GITHUB_OUTPUT

      - name: Get upload URL from Slack
        id: get_upload_url
        run: |
          response=$(curl -X POST -H "Authorization: Bearer ${{ secrets.SLACK_BOT_TOKEN }}" \
                          -H "Content-Type: application/json" \
                          -d '{"length": ${{ steps.file_size.outputs.size }}}' \
                          https://slack.com/api/files.getUploadURLExternal)
          echo "upload_url=$(echo $response | jq -r '.upload_url')" >> $GITHUB_OUTPUT
          echo "file_id=$(echo $response | jq -r '.file_id')" >> $GITHUB_OUTPUT

      - name: Upload file to Slack
        run: |
          curl -F file=@output.zip \
               -H "Authorization: Bearer ${{ secrets.SLACK_BOT_TOKEN }}" \
               ${{ steps.get_upload_url.outputs.upload_url }}

      - name: Complete file upload
        run: |
          curl -X POST -H "Authorization: Bearer ${{ secrets.SLACK_BOT_TOKEN }}" \
               -H "Content-Type: application/json" \
               -d '{"files": [{"id": "${{ steps.get_upload_url.outputs.file_id }}", "title": "output.zip"}], "channels": "${{ secrets.SLACK_CHANNEL }}"}' \
               https://slack.com/api/files.completeUploadExternal

      - name: Cleanup output.zip
        run: rm -f output.zip
